NIGHTSCOUT_HOST=https://mikestebbinscgmsite.azurewebsites.net
API_SECRET=89905a25dc7cb3a25c9314c0367810d3e3882d3c
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
#
# 
# m h  dom mon dow   command
#
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
#
# run the main loop and peripherals
*/3 * * * * (cd /home/pi/Scripts/ && ./check_loop_successful.py && cd /home/pi/openapsdev/ && openaps retry-loop && openaps ns-upload-all && openaps cleanup && openaps git-push && cd /home/pi/Scripts/ && ./set_loop_successful.py) 2>&1 | logger -t openaps
#
# run scripts at reboot
@reboot (cd /home/pi/Scripts/ && ./check_loop_successful.py && cd /home/pi/openapsdev/ && openaps retry-loop && openaps ns-upload-all && openapaps cleanup && openaps git-push && cd /home/pi/Scripts/ && ./set_loop_successful.py)) 2>&1 | logger -t openaps
#
# kill all openaps processes older than 10 minutes in case
*/10 * * * * (cd /home/pi/openapsdev/; openaps cleanup && killall -g --older-than 10m openaps) 2>&1 | logger -t openaps
#
# Backup my crontab file (this one) and my aliases file to the openapsdev directory
#0 * * * * crontab -l > ~/openapsdev/cron_backup.txt; cp -f ~/.bashrc ~/openapsdev/.bashrc; cp -f /usr/local/bin/checkwifi.sh ~/openapsdev/Scripts/checkwifi.sh; cp -f /etc/rc.local ~/openapsdev/Scripts/rc.local.backup
#
# Check for wifi connectivity, and restart pi if there is an issue
*/5 * * * * /usr/bin/sudo -H /usr/local/bin/checkwifi.sh >> /dev/null 2>&1
#
# Ping google every minute for a keep-alive
*/1 * * * * ping -c1 www.google.com >> /dev/null 2>&1
#
# Restart the pi every 20 minutes during the nighttime to deal with carelink stick failures
#4,24,44 0,1,2,3,4,5,6,22,23 * * * (cd /home/pi/openapsdev/Scripts/ && ./reboot.sh)
# moved this to sudo crontab -e
#
# check battery level and reservoir level every hour, SMS if either is low
0 * * * * (cd /home/pi/openapsdev/Scripts/ && ./reservoir_battery_notification.py) 2>&1 | logger -t openaps


